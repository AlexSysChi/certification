General hints:
    1. pay attention variables scope:
        *   local variable in the method can't be named with method parameter name (which is also local variable)
        *   local variables can't have ambiguity names even for outer-inner blocks (previous bullet generalizing)
        *   it's possible to have static (class) variable and instance variable with the same name - shadowing
        *   local variables declared in the block can't be used outside declaration block
    2.  static method aren't inherited - shadowing

Exceptions:
    1.  Each try block must be followed by catch or finally block (or both)
    2.  When code try to convert string to a number (in case proper implementation)
        and string in inappropriate format than NumberFormatException will be thrown

Class construction:
    1.  The Only mandatory class component is a constructor.
        Even it wasn't implemented manually - compile will generate default one
    2.  Class names mustn't contain Java keywords
    3.  Top level class mustn't have [static, private, protected] modifiers

StringBuilder:
    1. StringBuilder object sb could be placed in sout (sb.toString() will be called)
    2. Default capacity is 16. If sb initialized with some string, capacity will be equal
        to 16 + length of string attribute

Arrays:
    1. length field for multidimensional array store size of 'first lay' array

ArrayList:
    1.  default size of ArrayList is 10, but due to 'lazy actions' size of arrayList will
        be zero, until first element is put, after that size of arrayList will be equal 10
        (until resizing if size wouldn't be enough)

Arithmetic operations:
    1. remainder of the division will have the same sign as divided

Wrappers:
    1.  Wrappers can't wide from one to another. [ex. Float object couldn't be converted to Double implicitly]

    2. Another situation with converting float to Double, here two step are required:
        float->double->Double, but when Java wides/wraps types - it is only one step will be implemented
        (in our example from float to double, but we need to wrap double to Double - it won't be implemented)

Variables:
    1.  final class/instance variables must be initialized (only once) before using:
        * static (class) - before class loaded (direct initialization or in static init block(s))
        * instance - before instance created (direct initialization, instance init block(s), constructors)
        * local - could be declared and initialized in different places, but before first using

Inheritance:
    1. instance of (see: InstanceOfExample)
        *   if subclass object assigned to superclass reference
        *   subclass object implements some interface
        *   than test superclass reference (actually containing subclass object) for
            instance of the some interface will result true
        conclusion: if polymorphism is used, than instance of operator will see concrete subclass 'behaviour'

Interface:
    1.  Form Java 8 it is allowed to have non-abstract methods in interface (static and default ones),
        BUT there is a limitation: default interface method can't override ones from Object class.
        'Interface multiple inheritance rule': class declared method always wins
